// Generated by delombok at Fri Nov 04 22:13:54 CST 2022
package org.mineacademy.fo.collection;

import org.mineacademy.fo.SerializeUtil.Mode;

/**
 * Strict collection does not allow adding duplicate elements,
 * and throw an error when you attempt to remove a non-existing element from
 * list/map.
 */
public abstract class StrictCollection {
	/**
	 * Determines how you want this list to be saved, if you use JSON or YAML file.
	 * Used in {@link #serialize()}. Defaults to YAML
	 */
	private Mode mode = Mode.YAML;
	/**
	 * The error message when removing non-existing keys
	 */
	private final String cannotRemoveMessage;
	/**
	 * The error message when adding duplicate keys
	 */
	private final String cannotAddMessage;

	/**
	 * Convert this object into something that can be safely stored in a settings file
	 *
	 * @return
	 */
	public abstract Object serialize();

	/**
	 * The error message when removing non-existing keys
	 */
	@java.lang.SuppressWarnings("all")
	protected String getCannotRemoveMessage() {
		return this.cannotRemoveMessage;
	}

	/**
	 * The error message when adding duplicate keys
	 */
	@java.lang.SuppressWarnings("all")
	protected String getCannotAddMessage() {
		return this.cannotAddMessage;
	}

	@java.lang.SuppressWarnings("all")
	public StrictCollection(final String cannotRemoveMessage, final String cannotAddMessage) {
		this.cannotRemoveMessage = cannotRemoveMessage;
		this.cannotAddMessage = cannotAddMessage;
	}

	/**
	 * Determines how you want this list to be saved, if you use JSON or YAML file.
	 * Used in {@link #serialize()}. Defaults to YAML
	 */
	@java.lang.SuppressWarnings("all")
	public void setMode(final Mode mode) {
		this.mode = mode;
	}

	/**
	 * Determines how you want this list to be saved, if you use JSON or YAML file.
	 * Used in {@link #serialize()}. Defaults to YAML
	 */
	@java.lang.SuppressWarnings("all")
	public Mode getMode() {
		return this.mode;
	}
}
